<template>
	<view class="content">
		<view class="title1">
			<view class="left">
				<uni-tabs @change="changeTab" :index="tabIndex">
					<uni-tab-bar>
						<div class="tab-bar-item" v-for="(tabBar, index) in tabBars" :key="index" :ref="tabBar.id + index">
							<text class="tab-bar-title" :class="[tabIndex === index ? 'active' : '']">{{tabBar.name}}</text>
						</div>
					</uni-tab-bar>
				</uni-tabs>
			</view>
			
		</view>
	</view>
</template>

<script>
	import uniTabContent from '@/components/uni-tab-content/uni-tab-content.nvue';
	import uniTabBar from '@/components/uni-tab-bar/uni-tab-bar.nvue';
	import uniTabs from '@/components/uni-tabs/uni-tabs.nvue';
	import uniMediaList from '@/components/uni-media-list/uni-media-list.nvue';

	const dom = weex.requireModule('dom');

	export default {
		data() {
			return {

				newsList: [],
				tabIndex: 0,
				tabBars: [{
					name: '推荐',
					id: 0
				}, {
					name: '专题',
					id: 23
				}, {
					name: '连载',
					id: 223
				}]
			}
		},
		components: {
			uniTabContent,
			uniTabBar,
			uniTabs,
			uniMediaList
		},

		methods: {
			async changeTab(event) {
				this.tabIndex = event.index;
				const activeNode = this.$refs[this.tabBars[event.index].id + event.index][0];
				let nodeSize = await this.getNodeSize(activeNode);
				if (nodeSize.left + nodeSize.width > 750) {
					let index = event.index - 4;
					let targetNode = this.$refs[this.tabBars[index].id + index][0];
					dom.scrollToElement(targetNode, {});
				} else if (nodeSize.left < 0) {
					dom.scrollToElement(activeNode, {});
				}
				// 首次切换后加载数据
				const activeTab = this.newsList[this.tabIndex];
				if (activeTab.data.length === 0) {
					this.getList();
				}
			},
			getNodeSize(node) {
				return new Promise((resolve, reject) => {
					dom.getComponentRect(node, (result) => {
						resolve(result.size);
					});
				});
			},
		}
	}
</script>

<style>
	.tab-bar-item {
		width: 100px;
		height: 100px;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.tab-bar-title {
		height: 100px;
		line-height: 100px;
		font-size: 35px;
		color: #555555;
	}

	.active {
		color: #F97306;
	}

	.loadmore {
		height: 70px;
		width: 750px;
		flex-direction: column;
		justify-content: center;
	}

	.loadmore-text {
		font-size: 30px;
		text-align: center;
		color: #999999;
	}

	.refresh {
		width: 750px;
		height: 70px;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.refresh-text {
		text-align: center;
		font-size: 28px;
		color: #999999;
	}
	
	.title1{
		display: flex;
		align-items: center;
		justify-content: space-between;
		margin-top: 50upx;
	}
	
	.search image{
		width: 100%;
		height: 100%;
	}
	
	
</style>
